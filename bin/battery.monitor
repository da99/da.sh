#!/usr/bin/env ruby
#
#
cmd = ARGV.map(&:strip).join(' ')

class Battery
  attr_reader :info

  def initialize
    @info = `upower -i /org/freedesktop/UPower/devices/battery_BAT0`.strip.split("\n").map(&:strip)
  end

  def state
    find('state: ').split(':').last.strip
  end

  def charging?
    state === 'charging'
  end

  def discharging?
    state === 'discharging'
  end

  def find(str)
    info.find { |line| line[str] }
  end

  def to_number
    l = find('percentage: ')
    if l
      l.strip.split(/\ +/).last.sub('%', '').to_i
    else
      0
    end
  end
end # class

case cmd
when 'current'
  batt = Battery.new
  puts batt.to_number

when 'status'
  batt = Battery.new
  puts "#{batt.state} #{batt.to_number}"

when 'watch'
  msg_id = nil
  low_icon = '/usr/share/icons/hicolor/scalable/apps/xfce4-battery-low.svg'
  full_icon = '/usr/share/icons/hicolor/scalable/apps/xfce4-battery-full-charging.svg'
  msg_app_name = 'battery.monitor'
  Kernel.loop do
    batt = Battery.new
    if batt.discharging? && batt.to_number < 25
      if batt.to_number < 12
        `loginctl suspend`
        next
      end

      msg_id = `notify-send --replace-id='#{msg_id || 10000}' --app-name='#{msg_app_name}' --icon='#{low_icon}' --print-id  "BATTERY!" "PLUG IN"`.strip
      if batt.to_number < 15
        sleep(60)
        next
      end

      sleep(60 * 5)
      next
    end

    if batt.charging? && batt.to_number > 95
      msg_id = `notify-send --replace-id='#{msg_id || 10000}' --app-name=#{msg_app_name} --icon='#{full_icon}' --print-id "Battery Charged:" "Unplug charger"`.strip
    end

    sleep(60 * 5)
  end # Kernel.loop
else
  raise "Unknown option: #{cmd}"
end

