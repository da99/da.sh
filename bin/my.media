#!/usr/bin/env bash
#
#
set -u -e -o pipefail


THIS_DIR="$(realpath "$(dirname "$0")"/..)"
case "$*" in
  "-h"|"--help"|"help")
    echo "$0 -h|--help|help -- Show this message."
    echo "$0 list|play|pause|status"
    echo "$0 is [playing|stopped]"
    echo "$0 [stop] watch playing"
    echo
    ;;

  "watch playing")
    # Inspiration: https://unix.stackexchange.com/questions/674127/is-there-a-way-to-run-a-hook-i-e-shell-script-etc-when-an-audio-device-is-op
    pactl subscribe | while read -r x event y type num; do
    case "$type" in
      source)
        # Certain streams take time to load because of network traffic,
        # preventing the status to change to 'Playing',
        # so we wait:
        if my.media is stopped ; then
          max_count=25
          count=0
          while test "$count" -lt "$max_count" ; do
            if { playerctl -a status | grep Playing; } ; then
              count="$max_count"
            else
              sleep 0.1
            fi
            count=$((count + 1))
          done
        fi
        echo "---------- Processed: $x $event $y $type $num"
        if playerctl -a status | grep Playing ; then
          my.keyboard playing
        else
          my.keyboard off
        fi
        ;;
      *)
        echo "--- skipping: $x $event $y $type $num"
        ;;
    esac
    done
    ;;

  "stop watch playing")
    set -x
    pkill -f "pactl subscribe"
    ;;

  *)
    "$THIS_DIR"/src/PlayerCTL.rb "$@"
    ;;
esac
